{"version":3,"sources":["Helper/time.js","Helper/NumberFormat.js","Components/Card/Card.js","Components/Post/Post.js","API_Calls/RedditApiCalls.js","Components/SubRowDisplay/SubRowDisplay.js","Components/NavBar/SearchBar.js","Components/NavBar/NavBar.js","ReduxStore/Reducers/SubRedditSlice.js","Components/SkeletonFolder/Layouts/Skeleton.js","Components/SkeletonFolder/SubReddits/SubRedditLayout.js","Components/FloatingBar/FloatingBar.js","Components/SubReddit/SubReddit.js","Components/FilterPage/FilterPage.js","ReduxStore/Reducers/SubRedditAboutSlice.js","Components/Card/AboutCard/AboutCard.js","ReduxStore/Reducers/userAboutSlice.js","Components/Card/UserCard/UserCard.js","Components/SideBar/SideBar.js","Components/ComponentLayout/ComponentLayout.js","ReduxStore/Reducers/PostsSlice.js","Components/SkeletonFolder/Card/CardLayout.js","Components/Card/ErrorCard/ErrorCard.js","Pages/HomePage/HomePage.js","Components/CommentsRow/CommentsRow.js","Components/Comments/Comments.js","Components/SinglePost/SinglePost.js","ReduxStore/Reducers/CommentSlice.js","Components/SkeletonFolder/CommentsLayout/CommentsLayout.js","Pages/CommentsPage/CommentsPage.js","ReduxStore/Reducers/SubRedditPostsSlice.js","Pages/SubRedditPage/SubRedditPage.js","Pages/RedirectPage/RedirectPage.js","ReduxStore/Reducers/userPostsSlice.js","Pages/UserPage/UserPage.js","Helper/ScrollToTop.js","Router/Router.js","ReduxStore/store.js","App/App.js","reportWebVitals.js","index.js"],"names":["getTimeDate","Date","date","created","createdDate","toDateString","createdTime","toTimeString","substr","substring","postCreation","array","current","arrayValue","day_Diff","getTime","getSeconds","split","currentDayCalculation","difference","Math","floor","hrstoSec","parseInt","minToSec","min","hour","numberFormat","count","number","toFixed","Card","props","useState","unmute","data","setData","videoElement","useRef","hls","Hls","useEffect","undefined","video_url","hsl_video","reddit_video","hls_url","loadSource","attachMedia","className","image","Image","src","url","match","height","Avatar","alt","title","author","thumbnail","style","display","flexWrap","lineHeight","textDecoration","color","to","subreddit","get_data","get_date","nolink","pathname","id","post_hint","isGallery","selfText","length","rel","href","paddingRight","onEnter","play","err","onLeave","pause","topOffset","bottomOffset","onClick","muted","margin","maxHeight","maxWidth","preload","ref","video","width","volume","sectiondata","ups","numComments","Post","filteredData","postData","filter","kind","map","score","upvoteRatio","upvote_ratio","comments","permalink","is_gallery","galleryData","gallery_data","selftext","secure_media","created_utc","num_comments","index","defaultProps","postsData","base_url","fetchPostData","parameter","a","fetch","fetchData","json","jsondata","status","children","Error","message","commentFetch","fetchParams","jsonresponse","subredditPosts","subredditAbout","userAbout","user","userPosts","redditSearch","param","type","SubRowDisplay","displayName","displayImg","fontSize","textTransform","subscribersCount","DropdownIndicator","s","label","Menu","options","overflowY","overflowX","option","SearchBar","navigate","useNavigate","loadOptions","inputValue","callback","response","result","display_name","value","subscribers","icon_img","onInputChange","inputvalue","action","defaultOptions","components","onChange","e","placeholder","NavBar","alignItems","stroke","fill","strokeWidth","viewBox","xmlns","d","paddingLeft","getAllSubReddit","createAsyncThunk","subredditReducer","createSlice","name","initialState","isLoading","subredditData","isError","error","reducers","extraReducers","pending","state","fulfilled","payload","rejected","reducer","SkeletonElement","classes","SubRedditLayoutRow","SubRedditLayout","FloatingBar","SubReddit","useSelector","subReddit","dispatch","useDispatch","key","filterOptions","path","icon","styles","createTheme","makeStyles","theme","listItem","fontWeight","background","palette","warning","main","activeLink","link","text","primary","FilterSide","isActive","ListItem","padding","ListItemIcon","ListItemText","getsubredditAbout","thunkAPI","subredditAboutReducer","subredditaboutData","AboutCard","about","public_description","justifyContent","marginLeft","accounts_active","getuserAbout","userAboutReducer","useraboutData","UserCard","username","userData","banner_img","zIndex","paddingBottom","snoovatar_img","comment_karma","SideBar","subreddittype","ComponentLayout","sideBarProps","getAllPosts","postsReducer","CardLayout","ErrorCard","textAlign","backgroundColor","HomePage","useParams","posts","filtertype","CommentsRow","comment","Comment","Commentdata","setCommentData","allData","child","body","SinglePost","getComments","commentReducer","commentData","CommentsLayout","CommentsPage","console","log","flexDirection","getSubRedditPosts","getSubRedditPostsReducer","subredditpostsData","SubRedditPage","subRedditPosts","RedirectPage","class","Button","component","Link","variant","startIcon","getuserPosts","getuserPostsReducer","userpostsData","UserPage","ScrollToTop","useLocation","prevLocation","window","scroll","PageRoutes","exact","element","store","configureStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3756d841.chunk.js","sourcesContent":["export const date = new Date();\r\n\r\nexport const getTimeDate = (date) => {\r\n  let created = new Date(date);\r\n  let createdDate = created.toDateString();\r\n  let createdTime = created.toTimeString().substr(0, 8);\r\n  return [createdDate.substring(3), createdTime, date];\r\n};\r\n\r\nexport const postCreation = (array) => {\r\n  const current = new Date();\r\n  let currentDate = current.toDateString();\r\n  let currentTime = current.toTimeString().substr(0, 8);\r\n  const arrayValue = new Date(array[2]);\r\n  const day_Diff =\r\n    (current.getTime() - arrayValue.getTime()) / (1000 * 60 * 60 * 24);\r\n  if (day_Diff < 0.5) {\r\n    let createdTime = getSeconds(array[1].split(\":\"));\r\n    let difference = createdTime;\r\n    return currentDayCalculation(difference);\r\n  } else if (day_Diff > 0.5 && day_Diff < 1) {\r\n    let difference = (current.getTime() - arrayValue.getTime()) / 1000;\r\n    return currentDayCalculation(difference);\r\n  } else if (day_Diff >= 1 && day_Diff <= 7) {\r\n    if (day_Diff < 2) {\r\n      return `${Math.floor(day_Diff)} day ago`;\r\n    }\r\n    return `${Math.floor(day_Diff)} days ago`;\r\n  } else {\r\n    return array[0];\r\n  }\r\n};\r\n\r\nconst getSeconds = (array) => {\r\n  let hrstoSec = parseInt(array[0]) * 3600;\r\n  let minToSec = parseInt(array[1]) * 60;\r\n  let sec = parseInt(array[2]) + hrstoSec + minToSec;\r\n  return sec;\r\n};\r\n\r\nconst currentDayCalculation = (difference) => {\r\n  switch (true) {\r\n    case difference < 60: {\r\n      return `${difference} seconds ago`;\r\n    }\r\n    case difference > 60 && difference < 3600: {\r\n      let min = Math.floor(difference / 60);\r\n\r\n      if (min < 5) {\r\n        return `${min} minute ago`;\r\n      } else {\r\n        return `${min} minutes ago`;\r\n      }\r\n    }\r\n    case difference >= 3600: {\r\n      let hour = Math.floor(difference / 3600);\r\n      if (hour <= 1) {\r\n        return `${hour} hour ago`;\r\n      } else {\r\n        return `${hour} hours ago`;\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const numberFormat = (count) => {\r\n  const number = parseInt(count);\r\n  if (number < 1000) {\r\n    return number;\r\n  } else if (number >= 1000 && number < 10000) {\r\n    return (number / 1000).toFixed(2) + \" k\";\r\n  } else if (number >= 10000 && number < 100000) {\r\n    return (number / 1000).toFixed(2) + \" k\";\r\n  } else if (number >= 100000 && number < 1000000) {\r\n    return (number / 100000).toFixed(2) + \" L\";\r\n  } else if (number >= 100000 && number < 10000000) {\r\n    return (number / 100000).toFixed(2) + \" L\";\r\n  } else if (number >= 10000000 && number < 100000000) {\r\n    return (number / 10000000).toFixed(2) + \" Cr\";\r\n  }\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport \"./Card.css\";\r\nimport Hls from \"hls.js\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { BsLink } from \"react-icons/bs\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTimeDate, postCreation } from \"../../Helper/time\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ModeCommentIcon from \"@material-ui/icons/ModeComment\";\r\nimport { numberFormat } from \"../../Helper/NumberFormat\";\r\n\r\nconst Card = (props) => {\r\n  let [unmute, updatemuteState] = useState(true);\r\n  let [data, setData] = useState(null);\r\n  let videoElement = useRef();\r\n\r\n  const hls = new Hls();\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (videoElement.current !== undefined) {\r\n      const video_url = data.hsl_video.reddit_video.hls_url;\r\n      hls.loadSource(video_url);\r\n      hls.attachMedia(videoElement.current);\r\n    }\r\n  });\r\n\r\n  /** Set Post time in seonds hours days and month**/\r\n  function get_date(date) {\r\n    const get_data = getTimeDate(date);\r\n    return postCreation(get_data);\r\n  }\r\n  const thumbnail = () => {\r\n    const pattern = /(jpg|jpeg|png|gif|bmp)/;\r\n\r\n    const image = new Image();\r\n    image.src = data.url;\r\n\r\n    if (data.url.match(pattern) && image.height !== 0) {\r\n      return <Avatar alt={data.title} src={data.url} />;\r\n    } else {\r\n      return <Avatar>{data.author[0]}</Avatar>;\r\n    }\r\n  };\r\n  const sectiondata = () => {\r\n    const image = new Image();\r\n    const comment = /comments/;\r\n\r\n    if (data.post_hint === \"image\") {\r\n      image.src = data.url;\r\n    }\r\n    if (data.post_hint === \"image\" && data.isGallery === undefined) {\r\n      return <img className=\"section-image\" src={data.url} alt=\"none\" />;\r\n    }\r\n\r\n    if (data.post_hint === undefined && data.selfText.length !== 0) {\r\n      return <p className=\"selfText\">{data.selfText}</p>;\r\n    }\r\n    if (\r\n      data.post_hint === undefined &&\r\n      data.selfText.length === 0 &&\r\n      !data.url.match(comment)\r\n    ) {\r\n      return (\r\n        <div className=\"section-link\">\r\n          <a rel=\"noopener\" href={data.url}>\r\n            <div className=\"external-link\">\r\n              <BsLink style={{ paddingRight: 5 }} />\r\n              External Link\r\n            </div>\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n    if (data.post_hint === \"link\") {\r\n      return (\r\n        <div className=\"section-link\">\r\n          <a rel=\"noopener\" href={data.url}>\r\n            <div className=\"external-link\">\r\n              <BsLink style={{ paddingRight: 5 }} />\r\n              External Link\r\n            </div>\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (data.post_hint === \"hosted:video\") {\r\n      return (\r\n        <Waypoint\r\n          onEnter={() => {\r\n            if (videoElement.current !== undefined) {\r\n              try {\r\n                const play = videoElement.current.play();\r\n                if (play !== undefined) videoElement.current.play();\r\n              } catch (err) {}\r\n            }\r\n          }}\r\n          onLeave={() => {\r\n            if (videoElement.current !== undefined) {\r\n              try {\r\n                const pause = videoElement.current.pause();\r\n                if (pause !== undefined) videoElement.current.pause();\r\n              } catch (err) {}\r\n            }\r\n          }}\r\n          topOffset=\"30%\"\r\n          bottomOffset=\"50%\"\r\n        >\r\n          <div\r\n            className=\"section-video\"\r\n            onClick={() => {\r\n              if (videoElement.current !== undefined) {\r\n                videoElement.current.muted = !videoElement.current.muted;\r\n              }\r\n            }}\r\n          >\r\n            <video\r\n              style={{ margin: \"auto\", maxHeight: \" 500px\", maxWidth: \"560px\" }}\r\n              preload=\"auto\"\r\n              ref={(video) => {\r\n                videoElement.current = video;\r\n              }}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              muted={unmute}\r\n              volume={1}\r\n            ></video>\r\n          </div>\r\n        </Waypoint>\r\n      );\r\n    }\r\n  };\r\n\r\n  const comment_num = () => {\r\n    if (props.nolink) {\r\n      return (\r\n        <div className=\"comment-num\">\r\n          <ModeCommentIcon />\r\n          {numberFormat(data.numComments)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={{\r\n            pathname: `/${data.subreddit}/comments/${data.id}`,\r\n          }}\r\n        >\r\n          <div className=\"comment-num\">\r\n            <ModeCommentIcon />\r\n            {numberFormat(data.numComments)}\r\n          </div>\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  const sectionTitle = () => {\r\n    if (props.nolink) {\r\n      return <h4 className=\"title\">{data.title}</h4>;\r\n    } else {\r\n      return (\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={{\r\n            pathname: `/${data.subreddit}/comments/${data.id}`,\r\n          }}\r\n        >\r\n          <h4 className=\"title\">{data.title}</h4>\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <div className=\"card\">\r\n          <div className=\"header\">\r\n            {thumbnail()}\r\n            <div\r\n              style={{ display: \"flex\", flexWrap: \"wrap\", lineHeight: \"0rem\" }}\r\n            >\r\n              <Link\r\n                className=\"card-subreddit\"\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n                to={`/subreddit/${data.subreddit}`}\r\n              >\r\n                <p>{data.subreddit}</p>\r\n              </Link>\r\n              <p style={{ color: \"grey\" }}> posted by </p>{\" \"}\r\n              <Link\r\n                className=\"card-author\"\r\n                style={{ textDecoration: \"none\", color: \"grey\" }}\r\n                to={`/user/${data.author}`}\r\n              >\r\n                <p>{data.author}</p>\r\n              </Link>\r\n              <p style={{ color: \"grey\" }}>\r\n                &nbsp;{get_date(data.created * 1000)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"section\">\r\n            {sectionTitle()}\r\n            {sectiondata()}\r\n          </div>\r\n\r\n          <footer className=\"card-footer\">\r\n            <div className=\"upVote\">\r\n              <ArrowUpwardIcon />\r\n              {numberFormat(data.ups)}\r\n              <ArrowDownwardIcon />\r\n            </div>\r\n            {comment_num()}\r\n          </footer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Post.css\";\r\n\r\nexport default function Post(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const data = props.postData;\r\n    const filterdata = data.filter((data) => data.kind === \"t3\");\r\n    const filteredData = filterdata.map((data) => {\r\n      return {\r\n        author: data.data.author,\r\n        title: data.data.title,\r\n        url: data.data.url,\r\n        thumbnail: data.data.thumbnail,\r\n        ups: data.data.score,\r\n        upvoteRatio: data.data.upvote_ratio,\r\n        comments: data.data.permalink,\r\n        post_hint: data.data.post_hint,\r\n        isGallery: data.data.is_gallery,\r\n        galleryData: data.data.gallery_data,\r\n        subreddit: data.data.subreddit,\r\n        selfText: data.data.selftext,\r\n        hsl_video: data.data.secure_media,\r\n        id: data.data.id,\r\n        created: data.data.created_utc,\r\n        numComments: data.data.num_comments,\r\n      };\r\n    });\r\n    setData(filteredData);\r\n    return () => {};\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"post-container\" id=\"post\">\r\n      {data.map((data, index) => {\r\n        return <Card key={index} data={data} />;\r\n      })}\r\n      {\r\n        data.length===0 &&<div>No Posts</div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nPost.defaultProps = {\r\n  postsData: [],\r\n};\r\n","const base_url = \"https://www.reddit.com\";\r\n\r\nexport const fetchPostData = async (parameter) => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/r/popular/${parameter}.json`);\r\n  \r\n    const jsondata = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      const data = jsondata.data.children;\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const subreddit = async () => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/subreddits.json`);\r\n    const jsondata = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      const data = jsondata.data.children.map((subreddit) => {\r\n        return subreddit;\r\n      });\r\n\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const commentFetch = async (fetchParams) => {\r\n  const { subreddit, id } = fetchParams;\r\n\r\n  try {\r\n    const fetchData = await fetch(\r\n      `${base_url}/r/${subreddit}/comments/${id}/.json`\r\n    );\r\n    const jsonresponse = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const subredditPosts = async (subreddit) => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/r/${subreddit}/.json`);\r\n    const jsonresponse = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const subredditAbout = async (subreddit) => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/r/${subreddit}/about.json`);\r\n    const jsonresponse = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const userAbout = async (user) => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/user/${user}/about.json`);\r\n    const jsonresponse = await fetchData.json();\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const userPosts = async (user) => {\r\n  try {\r\n    const fetchData = await fetch(`${base_url}/user/${user}/.json`);\r\n    const jsonresponse = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n\r\nexport const redditSearch = async (param, type = \"sr\") => {\r\n  try {\r\n    const fetchData = await fetch(\r\n      `${base_url}/search.json?q=${param}&type=${type}`\r\n    );\r\n    const jsonresponse = await fetchData.json();\r\n\r\n    if (fetchData.status === 200) {\r\n      return jsonresponse;\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.message || \"failed to fetch\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BsReddit } from \"react-icons/bs\";\r\nimport \"./SubRowDisplay.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { numberFormat } from \"../../Helper/NumberFormat.js\";\r\nexport default function SubRowDisplay(props) {\r\n  const DisplayImg = () => {\r\n    if (props.displayImg === null || props.displayImg === \"\") {\r\n      return <BsReddit className=\"display-icon\" />;\r\n    } else {\r\n      return (\r\n        <img\r\n          className=\"display-icon\"\r\n          src={props.displayImg}\r\n          alt={props.displayName}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"display-anchor\">\r\n      <Link\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n        to={`/subreddit/${props.displayName}`}\r\n      >\r\n        <div className=\"sub-row-display\">\r\n          {DisplayImg()}\r\n          <div className=\"display-text\">\r\n            <span>{props.displayName}</span>{\" \"}\r\n            <p\r\n              style={{ color: \"grey\", fontSize: \"15px\", textTransform: \"none\" }}\r\n            >\r\n              {numberFormat(props.subscribersCount)} subscribers\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React  from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { components} from \"react-select\";\r\nimport { redditSearch } from \"../../API_Calls/RedditApiCalls\";\r\nimport { HiOutlineSearch } from \"react-icons/hi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./NavBar.css\";\r\nimport SubRowDisplay from \"../SubRowDisplay/SubRowDisplay\";\r\nconst DropdownIndicator = (props) => {\r\n  return (\r\n    <components.DropdownIndicator s {...props}>\r\n      <HiOutlineSearch label=\"\" />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst Menu = (props) => {\r\n  if (props.options.length === 0) {\r\n    return <components.Menu {...props}>{props.children}</components.Menu>;\r\n  }\r\n  return (\r\n    <components.Menu {...props}>\r\n      {\r\n        <div\r\n          style={{ height: \"300px\", overflowY: \"scroll\", overflowX: \"hidden\" }}\r\n        >\r\n          {props.options.map((option, index) => {\r\n            return <SubRowDisplay key={index} {...option} />;\r\n          })}\r\n        </div>\r\n      }\r\n    </components.Menu>\r\n  );\r\n};\r\nconst SearchBar = () => {\r\n  const navigate = useNavigate();\r\n  const handleChange = (inputvalue, { action }) => {\r\n    if (action === \"set-value\") {\r\n      return \"\";\r\n    }\r\n    return inputvalue;\r\n  };\r\n\r\n  const loadOptions = async (inputValue, callback) => {\r\n    if (inputValue.length < 3 || !inputValue) {\r\n      callback([]);\r\n    }\r\n    const response = await redditSearch(inputValue);\r\n    const result = response.data.children.map((data) => {\r\n      return {\r\n        displayName: data.data.display_name,\r\n        value: data.data.display_name,\r\n        subscribersCount: data.data.subscribers,\r\n        displayImg: data.data.icon_img,\r\n      };\r\n    });\r\n\r\n    callback(result);\r\n  };\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <AsyncSelect\r\n        loadOptions={loadOptions}\r\n        onInputChange={handleChange}\r\n        defaultOptions\r\n        value=\"\"\r\n        components={{ DropdownIndicator, Menu }}\r\n        onChange={(e, { action }) => {\r\n          navigate(`/subreddit/${e.value}`);\r\n        }}\r\n        placeholder=\"Search\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"./NavBar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <header className=\"navheader\">\r\n      <Link\r\n        style={{ textDecoration: \"none\", display:'flex',alignItems:'center'}}\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      >\r\n        <div className=\"logo\">\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            viewBox=\"0 0 512 512\"\r\n            className=\"logo-icon\"\r\n            height=\"2em\"\r\n            width=\"2em\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M201.5 305.5c-13.8 0-24.9-11.1-24.9-24.6 0-13.8 11.1-24.9 24.9-24.9 13.6 0 24.6 11.1 24.6 24.9 0 13.6-11.1 24.6-24.6 24.6zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-132.3-41.2c-9.4 0-17.7 3.9-23.8 10-22.4-15.5-52.6-25.5-86.1-26.6l17.4-78.3 55.4 12.5c0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.3 24.9-24.9s-11.1-24.9-24.9-24.9c-9.7 0-18 5.8-22.1 13.8l-61.2-13.6c-3-.8-6.1 1.4-6.9 4.4l-19.1 86.4c-33.2 1.4-63.1 11.3-85.5 26.8-6.1-6.4-14.7-10.2-24.1-10.2-34.9 0-46.3 46.9-14.4 62.8-1.1 5-1.7 10.2-1.7 15.5 0 52.6 59.2 95.2 132 95.2 73.1 0 132.3-42.6 132.3-95.2 0-5.3-.6-10.8-1.9-15.8 31.3-16 19.8-62.5-14.9-62.5zM302.8 331c-18.2 18.2-76.1 17.9-93.6 0-2.2-2.2-6.1-2.2-8.3 0-2.5 2.5-2.5 6.4 0 8.6 22.8 22.8 87.3 22.8 110.2 0 2.5-2.2 2.5-6.1 0-8.6-2.2-2.2-6.1-2.2-8.3 0zm7.7-75c-13.6 0-24.6 11.1-24.6 24.9 0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.1 24.9-24.6 0-13.8-11-24.9-24.9-24.9z\"></path>\r\n          </svg>\r\n          <p className='nav-title' style={{ paddingLeft: 10 }}>\r\n            Reddit<span style={{ color: \"black\" }}> Minimal</span>\r\n          </p>\r\n        </div>\r\n      </Link>\r\n      <div className=\"search\">\r\n        <SearchBar />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { subreddit } from \"../../API_Calls/RedditApiCalls\";\r\n\r\nexport const getAllSubReddit = createAsyncThunk(\r\n  \"subreddit/getAllSubReddit\",\r\n  async (param = \"\", thunkAPI) => {\r\n    const response = await subreddit();\r\n    return response;\r\n  }\r\n);\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  subredditData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nexport const getSubRedditSlice = createSlice({\r\n  name: \"subreddits\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getAllSubReddit.pending]: (state) => {\r\n      state.isError = false;\r\n      state.isLoading = true;\r\n    },\r\n    [getAllSubReddit.fulfilled]: (state, action) => {\r\n      state.isError = false;\r\n      state.isLoading = false;\r\n      state.subredditData = action.payload;\r\n      state.status = \"succeeded\";\r\n    },\r\n    [getAllSubReddit.rejected]: (state, action) => {\r\n      state.isError = true;\r\n      state.error = action.error;\r\n      state.isLoading = false;\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const subredditReducer = getSubRedditSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./Skeleton.css\";\r\nconst SkeletonElement = ({ type }) => {\r\n  const classes = `skeleton ${type}`;\r\n  return <div className={classes}></div>;\r\n};\r\n\r\nexport default SkeletonElement;\r\n","import React from \"react\";\r\nimport SkeletonElement from \"../Layouts/Skeleton\";\r\n\r\nconst SubRedditLayoutRow = () => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <SkeletonElement type=\"avatar\" />\r\n      <div style={{ width: \"100%\" }}>\r\n        <SkeletonElement type=\"title\" />\r\n        <SkeletonElement type=\"spantext\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SubRedditLayout = () => {\r\n  return <SubRedditLayoutRow />;\r\n};\r\n","import React from \"react\";\r\nimport \"./FloatingBar.css\";\r\nimport { BsReddit } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nconst FloatingBar = (props) => {\r\n  const DisplayImg = () => {\r\n    if (props.displayImg === null || props.displayImg === \"\") {\r\n      return <BsReddit className=\"display-icon\" />;\r\n    } else {\r\n      return (\r\n        <img\r\n          className=\"display-icon\"\r\n          src={props.displayImg}\r\n          alt={props.displayName}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll-bar-view\">\r\n      <Link className=\"scroll-bar-view\" to={`/subreddit/${props.displayName}`}>\r\n        {DisplayImg()}\r\n        <p>{props.displayName}</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatingBar;\r\n","import React, { useEffect } from \"react\";\r\nimport SubRowDisplay from \"../SubRowDisplay/SubRowDisplay\";\r\nimport \"./SubReddit.css\";\r\nimport { getAllSubReddit } from \"../../ReduxStore/Reducers/SubRedditSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SubRedditLayout } from \"../SkeletonFolder/SubReddits/SubRedditLayout\";\r\nimport FloatingBar from \"../FloatingBar/FloatingBar\";\r\nexport default function SubReddit() {\r\n  const { isLoading, subredditData } = useSelector((state) => {\r\n    return state.subReddit;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllSubReddit());\r\n    return () => {};\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"sub-reddit\" id=\"sub-reddit-display\">\r\n        <div className=\"sub-reddit-title\">\r\n          <p>Sub Reddit</p>\r\n          <hr />\r\n        </div>\r\n        <div>\r\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((index) => {\r\n            return <SubRedditLayout key={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let filteredData = subredditData.map((data) => {\r\n    return {\r\n      displayName: data.data.display_name,\r\n      url: data.data.url,\r\n      displayImg: data.data.icon_img,\r\n      key: data.data.id,\r\n      subscribersCount: data.data.subscribers,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sub-reddit\" id=\"sub-reddit-display\">\r\n        <div className=\"sub-reddit-title\">\r\n          <p>Sub Reddit</p>\r\n          <hr />\r\n        </div>\r\n        <div>\r\n          {filteredData.map((data) => {\r\n            return <SubRowDisplay {...data} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"floating-bar\">\r\n        {filteredData.map((data) => {\r\n         \r\n          return <FloatingBar {...data} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport { createTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport DynamicFeedIcon from \"@material-ui/icons/DynamicFeed\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./FilterPage.css\";\r\n\r\nconst filterOptions = [\r\n  { name: \"all\", path: \"/\", icon: <DynamicFeedIcon /> },\r\n  { name: \"hot\", path: \"/filter/hot\", icon: <WhatshotIcon /> },\r\n  { name: \"new\", path: \"/filter/new\", icon: <DescriptionIcon /> },\r\n  { name: \"rising\", path: \"/filter/rising\", icon: <TrendingUpIcon /> },\r\n  { name: \"top\", path: \"/filter/top\", icon: <EqualizerIcon /> },\r\n];\r\nconst theme = createTheme();\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  listItem: {\r\n    fontWeight: 500,\r\n    \"&:hover\": {\r\n      background: \"none\",\r\n      \"& .MuiTypography-root\": {\r\n        color: theme.palette.warning.main,\r\n      },\r\n      \"& .MuiListItemIcon-root > svg\": {\r\n        color: theme.palette.warning.main,\r\n      },\r\n    },\r\n  },\r\n  activeLink: {\r\n    textDecoration: \"none\",\r\n    \"& .MuiListItem-root\": {\r\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n      color: \"white\",\r\n      \"& .MuiTypography-root\": {\r\n        color: \"white\",\r\n      },\r\n      \"& .MuiListItemIcon-root > svg\": {\r\n        color: \"white\",\r\n      },\r\n    },\r\n  },\r\n  link: {\r\n    color: theme.palette.text.primary,\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\nconst FilterSide = () => {\r\n  const classes = styles();\r\n\r\n  return (\r\n    <div style={{ textTransform: \"uppercase\", maxWidth: \"100%\" }}>\r\n      {filterOptions.map((data, index) => {\r\n        return (\r\n          <NavLink\r\n            className={(isActive) =>\r\n              isActive.isActive ? classes.activeLink : classes.link\r\n            }\r\n            to={data.path}\r\n            key={data.name}\r\n          >\r\n            <ListItem\r\n              key={index}\r\n              style={{ maxWidth: \"100%\", padding: \"5px 0\" }}\r\n            >\r\n              <ListItemIcon>{data.icon}</ListItemIcon>\r\n              <ListItemText style={{ maxWidth: \"100%\" }}>\r\n                {data.name}\r\n              </ListItemText>\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default FilterSide;\r\n","\r\nimport { subredditAbout } from \"../../API_Calls/RedditApiCalls\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getsubredditAbout = createAsyncThunk(\r\n  \"subreddit/subredditAbout\",\r\n  async (param, thunkAPI) => {\r\n    const response = await subredditAbout(param);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  subredditaboutData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nexport const getSubRedditAboutSlice = createSlice({\r\n  name: \"subreddits\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getsubredditAbout.pending]: (state) => {\r\n      state.isError = false;\r\n      state.isLoading = true;\r\n    },\r\n    [getsubredditAbout.fulfilled]: (state, action) => {\r\n      state.isError = false;\r\n      state.isLoading = false;\r\n      state.subredditaboutData = action.payload;\r\n      state.status = \"succeeded\";\r\n    },\r\n    [getsubredditAbout.rejected]: (state, action) => {\r\n      state.isError = true;\r\n      state.error = action.error;\r\n      state.isLoading = false;\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const subredditAboutReducer = getSubRedditAboutSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getsubredditAbout } from \"../../../ReduxStore/Reducers/SubRedditAboutSlice\";\r\nimport { numberFormat } from \"../../../Helper/NumberFormat\";\r\nimport { getTimeDate } from \"../../../Helper/time\";\r\nimport { FaBirthdayCake } from \"react-icons/fa\";\r\nimport \"./AboutCard.css\";\r\nconst AboutCard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { isLoading,subredditaboutData } = useSelector(\r\n    (state) => state.subredditAbout\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getsubredditAbout(props.about));\r\n  }, []);\r\n  if (isLoading) {\r\n    return <div>Loading</div>;\r\n  }\r\n  const data = subredditaboutData.data;\r\n\r\n  const section = () => {\r\n    return (\r\n      <div>\r\n        {data.public_description === \"\" ? (\r\n          <p>Welcome to {data.title}</p>\r\n        ) : (\r\n          <p>{data.public_description}</p>\r\n        )}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginLeft:'5px'\r\n          }}\r\n        >\r\n          <div className=\"about-subscribers\">\r\n            <div>{numberFormat(data.subscribers)}</div>\r\n            <p>Members</p>\r\n          </div>\r\n          <div className=\"about-subscribers\">\r\n            <div>{numberFormat(data.accounts_active)}</div>\r\n            <p>Online</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"subreddit-about\">\r\n      <div className=\"about-title\">\r\n        <p>About {data.display_name} Community</p>\r\n      </div>\r\n      <section className=\"about-section\">{section()}</section>\r\n      <div className=\"about-footer\">\r\n        <FaBirthdayCake />\r\n        <p>&nbsp;Created</p>\r\n        <p>&nbsp;{getTimeDate(data.created * 1000)[0]}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutCard;\r\n","\r\nimport { userAbout } from \"../../API_Calls/RedditApiCalls\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getuserAbout = createAsyncThunk(\r\n  \"user/userAbout\",\r\n  async (param, thunkAPI) => {\r\n    const response = await userAbout(param);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  useraboutData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nexport const getuserAboutSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getuserAbout.pending]: (state) => {\r\n      state.isError = false;\r\n      state.isLoading = true;\r\n    },\r\n    [getuserAbout.fulfilled]: (state, action) => {\r\n      state.isError = false;\r\n      state.isLoading = false;\r\n      state.useraboutData = action.payload;\r\n      state.status = \"succeeded\";\r\n    },\r\n    [getuserAbout.rejected]: (state, action) => {\r\n      state.isError = true;\r\n      state.error = action.error;\r\n      state.isLoading = false;\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const userAboutReducer = getuserAboutSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getuserAbout } from \"../../../ReduxStore/Reducers/userAboutSlice\";\r\nimport \"./UserCard.css\";\r\nimport { GiCakeSlice } from \"react-icons/gi\";\r\nimport { BsFlower2 } from \"react-icons/bs\";\r\nimport { getTimeDate } from \"../../../Helper/time\";\r\nimport { numberFormat } from \"../../../Helper/NumberFormat\";\r\n\r\nconst UserCard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { isLoading, useraboutData } = useSelector((state) => state.userAbout);\r\n\r\n  useEffect(() => {\r\n    dispatch(getuserAbout(props.username));\r\n  }, []);\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const banner_img = (url) => {\r\n    let split = url.split(/(jpg|jpeg|png|gif|bmp)/);\r\n    const joinedstring = split[0] + split[1];\r\n    return joinedstring;\r\n  };\r\n  const userData = useraboutData.data;\r\n\r\n  return (\r\n    <div className=\"user-about\">\r\n      <div className=\"banner-image\">\r\n        {userData.subreddit.banner_img && (\r\n          <img\r\n            className=\"banner-image\"\r\n            src={banner_img(userData.subreddit.banner_img)}\r\n            alt=\"banner_img\"\r\n          />\r\n        )}\r\n      </div>\r\n      <section style={{ zIndex: 100 }}>\r\n        <div className=\"user-icon\">\r\n          <img\r\n            style={{ height: \"200px\", paddingBottom: \"10px\" }}\r\n            src={\r\n              userData.snoovatar_img\r\n                ? userData.snoovatar_img\r\n                : \"https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png\"\r\n            }\r\n            alt=\"snoovatar_img\"\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.2rem\",\r\n          }}\r\n        >\r\n          {userData.name}\r\n        </div>\r\n        <p className=\"user-description\">\r\n          {userData.subreddit.public_description}\r\n        </p>\r\n        <div className=\"user-midsection\">\r\n          <div className=\"karma\">\r\n            <p>Karma</p>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <BsFlower2 />\r\n              &nbsp;{numberFormat(userData.comment_karma)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"karma\">\r\n            <p>Cake Day</p>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <GiCakeSlice />\r\n              &nbsp;{getTimeDate(userData.created * 1000)[0]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport \"./SideBar.css\";\r\nimport SubReddit from \"../SubReddit/SubReddit\";\r\nimport FilterSide from \"../FilterPage/FilterPage\";\r\nimport AboutCard from \"../Card/AboutCard/AboutCard\";\r\nimport UserCard from \"../Card/UserCard/UserCard\";\r\nconst SideBar = (props) => {\r\n  return (\r\n    <div>\r\n    <div className=\"side-bar\">\r\n      {props.filter && <FilterSide />}\r\n      {props.about && <AboutCard about={props.subreddittype} />}\r\n      {props.user && <UserCard username={props.username} />}\r\n      <SubReddit  />\r\n    </div>\r\n    <div className='sidebar-subreddit'>\r\n    <SubReddit  />\r\n    </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport './ComponentLayout.css'\r\n\r\nconst ComponentLayout = (props) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <main className='main-content'>\r\n          <section className='section-content'>\r\n              {props.children}\r\n          </section>\r\n          <SideBar {...props.sideBarProps}/>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComponentLayout;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { fetchPostData } from \"../../API_Calls/RedditApiCalls\";\r\n\r\nexport const getAllPosts = createAsyncThunk(\r\n  \"posts/getAllPosts\",\r\n  async (param = \"\", thunkAPI) => {\r\n    const response = await fetchPostData(param);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  postsData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\nexport const PostsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getAllPosts.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.isError = false;\r\n    },\r\n    [getAllPosts.fulfilled]: (state, action) => {\r\n      state.isError = false;\r\n      state.isLoading = false;\r\n      state.status = \"succeeded\";\r\n      state.postsData = action.payload;\r\n    },\r\n    [getAllPosts.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.error = action.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const postsReducer = PostsSlice.reducer;\r\n","import React from \"react\";\r\nimport  SkeletonElement  from \"../Layouts/Skeleton\";\r\nimport './CardLayout.css'\r\nconst CardLayout = (props) => {\r\n  return (\r\n    <div\r\n      className=\"card-layout\"\r\n    >\r\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\",alignItems:'center' }}>\r\n        <SkeletonElement type=\"avatar\" />\r\n        <SkeletonElement type=\"spantext\" />\r\n      </div>\r\n\r\n      <SkeletonElement type=\"skeleton-title\" />\r\n      \r\n      <SkeletonElement type=\"skeleton-content\" />\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n        <SkeletonElement type=\"button\" />\r\n        <SkeletonElement type=\"button\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardLayout;\r\n","import React from \"react\";\r\n\r\nconst ErrorCard = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        fontSize: \"3rem\",\r\n        backgroundColor: \" #FFCCCC\",\r\n        margin: \"20px\",\r\n      }}\r\n    >\r\n      {\r\n        props.error&&<div>\r\n          <p>Your connection is currently offline!</p>\r\n          <p>{props.error}</p>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default ErrorCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Post from \"../../Components/Post/Post\";\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nimport { getAllPosts } from \"../../ReduxStore/Reducers/PostsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const pathname = useParams();\r\n  const { isLoading, isError, postsData, error } = useSelector(\r\n    (state) => state.posts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getAllPosts(pathname.filtertype));\r\n    return () => {};\r\n  },[pathname.filtertype] );\r\n\r\n  if (isError) {\r\n   \r\n    return <ErrorCard error={error.message}/>;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout sideBarProps={{ filter: true }}>\r\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((index) => (\r\n          <CardLayout key={index} />\r\n        ))}\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n  return (\r\n    <ComponentLayout sideBarProps={{ filter: true }}>\r\n      {postsData && <Post postData={postsData} />}\r\n    </ComponentLayout>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport \"./CommentsRow.css\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { numberFormat } from \"../../Helper/NumberFormat\";\r\nimport { getTimeDate, postCreation } from \"../../Helper/time\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CommentsRow = (props) => {\r\n  const comment = props.data;\r\n  function get_date(date) {\r\n    const get_data = getTimeDate(date * 1000);\r\n    return postCreation(get_data);\r\n  }\r\n  return (\r\n    <div className=\"comments-row\">\r\n      <div>\r\n        <p className=\"comment-author\">\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to={`/user/${comment.author}`}\r\n          >\r\n            {\" \"}\r\n            {comment.author}\r\n          </Link>{\" \"}\r\n          &nbsp;<span> {get_date(comment.created)}</span>\r\n        </p>\r\n\r\n        <p className=\"comment-text\">{comment.text}</p>\r\n      </div>\r\n      <div className=\"comment-upvote\">\r\n        <PublishIcon />\r\n        <p style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\r\n          {numberFormat(comment.ups)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CommentsRow from \"../CommentsRow/CommentsRow\";\r\n\r\nimport \"./Comments.css\";\r\n\r\nconst Comment = (props) => {\r\n  const [Commentdata, setCommentData] = useState([]);\r\n  useEffect(() => {\r\n      const allData = props.comments;\r\n      const filterData = allData.filter(\r\n        (data, index) => index !== allData.length - 1\r\n      );\r\n      const filteredData = filterData.map((data, index) => {\r\n        const child = data.data;\r\n        return {\r\n          text: child.body,\r\n          ups: child.ups,\r\n          author: child.author,\r\n          created: child.created,\r\n        };\r\n      });\r\n      setCommentData(filteredData);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"comment-div\">\r\n      <p className=\"discussion\">Discussions</p>\r\n      {Commentdata && Commentdata.map((data, index) => {\r\n            return (\r\n              <div key={index} className=\"comment-row\">\r\n                <CommentsRow data={data} />\r\n              </div>\r\n            );\r\n          })\r\n       }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport '../Post/Post.css'\r\nexport default function SinglePost(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await props.postData;\r\n      const filteredData = await data.map((data, index) => {\r\n        return {\r\n          author: data.data.author,\r\n          title: data.data.title,\r\n          url: data.data.url,\r\n          thumbnail: data.data.thumbnail,\r\n          ups: data.data.score,\r\n          upvoteRatio: data.data.upvote_ratio,\r\n          comments: data.data.permalink,\r\n          post_hint: data.data.post_hint,\r\n          isGallery: data.data.is_gallery,\r\n          galleryData: data.data.gallery_data,\r\n          subreddit: data.data.subreddit,\r\n          selfText: data.data.selftext,\r\n          hsl_video: data.data.secure_media,\r\n          id: data.data.id,\r\n          created: data.data.created_utc,\r\n          numComments: data.data.num_comments,\r\n        };\r\n        \r\n      });\r\n      setData(filteredData);\r\n    };\r\n    fetchData();\r\n    return () => {};\r\n  }, [props]);\r\n  return (\r\n    <div style={{width:'100%'}} id=\"post\">\r\n      {data.map((data, index) => {\r\n        return <Card nolink key={index} data={data} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { commentFetch } from \"../../API_Calls/RedditApiCalls\";\r\n\r\nexport const getComments = createAsyncThunk(\r\n  '\"comment/getAllComments',\r\n  async (param, thunkAPI) => {\r\n    const response = await commentFetch(param);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  commentData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nexport const commentSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getComments.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.isError = false;\r\n    },\r\n    [getComments.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = false;\r\n      state.status = \"succeeded\";\r\n      state.commentData = action.payload;\r\n    },\r\n    [getComments.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.status = \"failed\";\r\n      state.error = action.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const commentReducer = commentSlice.reducer","import React from \"react\";\r\nimport SkeletonElement from \"../Layouts/Skeleton\";\r\nimport './CommentsLayout.css'\r\nconst CommentsLayout = () => {\r\n  return (\r\n    <div className=\"comments-row\">\r\n      <div>\r\n        <SkeletonElement className=\"comment-author\" type=\"title\" />\r\n        &nbsp;\r\n        <SkeletonElement type=\"spantext\" />\r\n        <SkeletonElement type=\"text\" />\r\n      </div>\r\n      <div className=\"comment-upvote\">\r\n        <SkeletonElement type=\"spantext\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsLayout;\r\n","import React, { useEffect } from \"react\";\r\nimport Comments from \"../../Components/Comments/Comments\";\r\nimport SinglePost from \"../../Components/SinglePost/SinglePost\";\r\nimport \"./CommentsPage.css\";\r\nimport { getComments } from \"../../ReduxStore/Reducers/CommentSlice\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CommentsLayout from \"../../Components/SkeletonFolder/CommentsLayout/CommentsLayout\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nconst CommentsPage = () => {\r\n  const pathname = useParams();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isError, error, commentData } = useSelector((state) => {\r\n    return state.comments;\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getComments(pathname));\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  if (isError) {\r\n    console.log(error)\r\n    return <ErrorCard error={error.message}/>;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout sideBarProps={{ filter: false }}>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <CardLayout />\r\n          {[1, 2, 3, 4, 5, 6].map((index) => (\r\n            <CommentsLayout key={index} />\r\n          ))}\r\n        </div>\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n  return (\r\n    <ComponentLayout sideBarProps={{ filter: false }}>\r\n      {commentData && (\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\r\n        >\r\n          <SinglePost postData={commentData[0].data.children} />\r\n          <Comments comments={commentData[1].data.children} />\r\n        </div>\r\n      )}\r\n    </ComponentLayout>\r\n  );\r\n};\r\n\r\nexport default CommentsPage;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { subredditPosts } from \"../../API_Calls/RedditApiCalls\";\r\n\r\nexport const getSubRedditPosts = createAsyncThunk(\r\n  \"subreddit/allPosts\",\r\n  async (param, thunkAPI) => {\r\n    const response = await subredditPosts(param);\r\n    return response;\r\n  }\r\n);\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  subredditpostsData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nconst getSubRedditPostsSlice = createSlice({\r\n  name: \"subredditPosts\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getSubRedditPosts.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.isError = false;\r\n    },\r\n    [getSubRedditPosts.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = false;\r\n      state.status = \"succeeded\";\r\n      state.subredditpostsData = action.payload;\r\n    },\r\n    [getSubRedditPosts.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.status = \"failed\";\r\n      state.error = action.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const getSubRedditPostsReducer = getSubRedditPostsSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nimport { getSubRedditPosts } from \"../../ReduxStore/Reducers/SubRedditPostsSlice\";\r\nimport Post from \"../../Components/Post/Post\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\nconst SubRedditPage = () => {\r\n  const pathname = useParams();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isError, error, subredditpostsData } = useSelector(\r\n    (state) => {\r\n      return state.subRedditPosts;\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getSubRedditPosts(pathname.subreddittype));\r\n\r\n    return () => {};\r\n  }, [pathname.subreddittype]);\r\n  if (isError) {\r\n    return <ErrorCard error={error.message} />;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout>\r\n        {[1, 2, 3, 4, 5, 6].map((index) => (\r\n          <CardLayout key={index} />\r\n        ))}\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <ComponentLayout\r\n        sideBarProps={{ about: true, subreddittype: pathname.subreddittype }}\r\n      >\r\n        <Post postData={subredditpostsData.data.children} />\r\n      </ComponentLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubRedditPage;\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Link} from 'react-router-dom'\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport \"./RedirectPage.css\";\r\nconst RedirectPage = () => {\r\n  return (\r\n    <div id=\"notfound\">\r\n      <div class=\"notfound\">\r\n        <div class=\"notfound-404\">\r\n          <h3>Oops! Page not found</h3>\r\n          <h1>\r\n            <span>4</span>\r\n            <span>0</span>\r\n            <span>4</span>\r\n          </h1>\r\n        </div>\r\n        <h2>we are sorry, but the page you requested was not found</h2>\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" startIcon={<ArrowBackIosIcon />}>\r\n          HomePage\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectPage;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { userPosts } from \"../../API_Calls/RedditApiCalls\";\r\n\r\n\r\nexport const getuserPosts = createAsyncThunk(\r\n  \"user/allPosts\",\r\n  async (param, thunkAPI) => {\r\n    const response = await userPosts(param);\r\n    return response;\r\n  }\r\n);\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoading: true,\r\n  userpostsData: [],\r\n  isError: \"null\",\r\n  error: \"\",\r\n};\r\n\r\nconst getuserPostsSlice = createSlice({\r\n  name: \"userPosts\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getuserPosts.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.isError = false;\r\n    },\r\n    [getuserPosts.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = false;\r\n      state.status = \"succeeded\";\r\n      state.userpostsData = action.payload;\r\n    },\r\n    [getuserPosts.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.status = \"failed\";\r\n      state.error = action.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const getuserPostsReducer = getuserPostsSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { getuserPosts } from \"../../ReduxStore/Reducers/userPostsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nimport Post from \"../../Components/Post/Post\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\nconst UserPage = () => {\r\n  const dispatch = useDispatch();\r\n  const pathname = useParams();\r\n  const { isLoading, isError, userpostsData, error } = useSelector(\r\n    (state) => state.userPosts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getuserPosts(pathname.username));\r\n    return () => {};\r\n  }, [pathname.username]);\r\n  if (isError) {\r\n    return <ErrorCard error={error.message} />;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout>\r\n        {[1, 2, 3, 4, 5, 6].map((index) => (\r\n          <CardLayout key={index} />\r\n        ))}\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n \r\n  return (\r\n    <ComponentLayout sideBarProps={{ user: true, username: pathname.username }}>\r\n      <Post postData={userpostsData.data.children} />\r\n    </ComponentLayout>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props) => {\r\n  const { pathname } = useLocation();\r\n  const prevLocation = useRef();\r\n  useEffect(() => {\r\n    if (pathname != prevLocation) {\r\n      prevLocation.current = pathname;\r\n      window.scroll(0, 0);\r\n    }\r\n  }, [pathname]);\r\n\r\n  return props.children;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\r\n\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport HomePage from \"../Pages/HomePage/HomePage\";\r\nimport CommentsPage from \"../Pages/CommentsPage/CommentsPage\";\r\nimport SubRedditPage from \"../Pages/SubRedditPage/SubRedditPage\";\r\nimport RedirectPage from \"../Pages/RedirectPage/RedirectPage\";\r\nimport UserPage from \"../Pages/UserPage/UserPage\";\r\nimport ScrollToTop from \"../Helper/ScrollToTop\";\r\nconst PageRoutes = () => {\r\n  return (\r\n    <Router>\r\n      <ScrollToTop>\r\n        <Routes>\r\n          <Route path=\"/\" exact element={<HomePage />} />\r\n          <Route\r\n            path=\"/:subreddit/comments/:id\"\r\n            exact\r\n            element={<CommentsPage />}\r\n          />\r\n          <Route path=\"/filter/:filtertype\" exact element={<HomePage />} />\r\n          <Route\r\n            path=\"/subreddit/:subreddittype\"\r\n            exact\r\n            element={<SubRedditPage />}\r\n          />\r\n          <Route path=\"/user/:username\" exact element={<UserPage />} />\r\n          <Route element={<RedirectPage />} />\r\n        </Routes>\r\n      </ScrollToTop>\r\n    </Router>\r\n  );\r\n};\r\nexport default PageRoutes;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { postsReducer } from \"./Reducers/PostsSlice\";\r\nimport { commentReducer } from \"./Reducers/CommentSlice\";\r\nimport { subredditReducer } from \"./Reducers/SubRedditSlice\";\r\nimport { getSubRedditPostsReducer } from \"./Reducers/SubRedditPostsSlice\";\r\nimport { subredditAboutReducer } from \"./Reducers/SubRedditAboutSlice\";\r\nimport { userAboutReducer } from \"./Reducers/userAboutSlice\";\r\nimport { getuserPostsReducer } from \"./Reducers/userPostsSlice\";\r\nconst reducer = {\r\n  posts: postsReducer,\r\n  comments: commentReducer,\r\n  subReddit: subredditReducer,\r\n  subRedditPosts: getSubRedditPostsReducer,\r\n  subredditAbout: subredditAboutReducer,\r\n  userAbout: userAboutReducer,\r\n  userPosts: getuserPostsReducer,\r\n};\r\nexport const store = configureStore({\r\n  reducer,\r\n});\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport PageRoutes from \"../Router/Router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../ReduxStore/store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <PageRoutes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}