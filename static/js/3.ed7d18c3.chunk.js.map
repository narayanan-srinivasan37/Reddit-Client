{"version":3,"sources":["../node_modules/@material-ui/icons/Publish.js","Components/CommentsRow/CommentsRow.js","Components/Comments/Comments.js","Components/SinglePost/SinglePost.js","Components/SkeletonFolder/CommentsLayout/CommentsLayout.js","Pages/CommentsPage/CommentsPage.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","CommentsRow","props","comment","data","className","style","textDecoration","color","to","author","date","get_data","getTimeDate","postCreation","get_date","created","text","fontWeight","fontSize","numberFormat","ups","Comment","useState","Commentdata","setCommentData","useEffect","allData","comments","filteredData","filter","index","length","map","child","body","SinglePost","setData","fetchData","a","postData","title","url","thumbnail","score","upvoteRatio","upvote_ratio","permalink","post_hint","isGallery","is_gallery","galleryData","gallery_data","subreddit","selfText","selftext","hsl_video","secure_media","id","created_utc","numComments","num_comments","width","Card","nolink","CommentsLayout","Skeleton","type","CommentsPage","pathname","useParams","dispatch","useDispatch","useSelector","state","isLoading","isError","error","commentData","getComments","ErrorCard","message","ComponentLayout","sideBarProps","display","flexDirection","CardLayout","children"],"mappings":"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","file":"static/js/3.ed7d18c3.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');\n\nexports.default = _default;","import React from \"react\";\r\nimport \"./CommentsRow.css\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { numberFormat } from \"../../Helper/NumberFormat\";\r\nimport { getTimeDate, postCreation } from \"../../Helper/time\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CommentsRow = (props) => {\r\n  const comment = props.data;\r\n  function get_date(date) {\r\n    const get_data = getTimeDate(date * 1000);\r\n    return postCreation(get_data);\r\n  }\r\n  return (\r\n    <div className=\"comments-row\">\r\n      <div>\r\n        <p className=\"comment-author\">\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to={`/user/${comment.author}`}\r\n          >\r\n            {\" \"}\r\n            {comment.author}\r\n          </Link>{\" \"}\r\n          &nbsp;<span> {get_date(comment.created)}</span>\r\n        </p>\r\n\r\n        <p className=\"comment-text\">{comment.text}</p>\r\n      </div>\r\n      <div className=\"comment-upvote\">\r\n        <PublishIcon />\r\n        <div style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\r\n          {numberFormat(comment.ups)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CommentsRow from \"../CommentsRow/CommentsRow\";\r\n\r\nimport \"./Comments.css\";\r\n\r\nconst Comment = (props) => {\r\n  const [Commentdata, setCommentData] = useState([]);\r\n  useEffect(() => {\r\n      const allData = props.comments;\r\n      const filterData = allData.filter(\r\n        (data, index) => index !== allData.length - 1\r\n      );\r\n      const filteredData = filterData.map((data, index) => {\r\n        const child = data.data;\r\n        return {\r\n          text: child.body,\r\n          ups: child.ups,\r\n          author: child.author,\r\n          created: child.created,\r\n        };\r\n      });\r\n      setCommentData(filteredData);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"comment-div\">\r\n      <p className=\"discussion\">Discussions</p>\r\n      {Commentdata && Commentdata.map((data, index) => {\r\n            return (\r\n              <div key={index} className=\"comment-row\">\r\n                <CommentsRow data={data} />\r\n              </div>\r\n            );\r\n          })\r\n       }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport '../Post/Post.css'\r\nexport default function SinglePost(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await props.postData;\r\n      const filteredData = await data.map((data, index) => {\r\n        return {\r\n          author: data.data.author,\r\n          title: data.data.title,\r\n          url: data.data.url,\r\n          thumbnail: data.data.thumbnail,\r\n          ups: data.data.score,\r\n          upvoteRatio: data.data.upvote_ratio,\r\n          comments: data.data.permalink,\r\n          post_hint: data.data.post_hint,\r\n          isGallery: data.data.is_gallery,\r\n          galleryData: data.data.gallery_data,\r\n          subreddit: data.data.subreddit,\r\n          selfText: data.data.selftext,\r\n          hsl_video: data.data.secure_media,\r\n          id: data.data.id,\r\n          created: data.data.created_utc,\r\n          numComments: data.data.num_comments,\r\n        };\r\n        \r\n      });\r\n      setData(filteredData);\r\n    };\r\n    fetchData();\r\n    return () => {};\r\n  }, [props]);\r\n  return (\r\n    <div style={{width:'100%'}} id=\"post\">\r\n      {data.map((data, index) => {\r\n        return <Card nolink key={index} data={data} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SkeletonElement from \"../Layouts/Skeleton\";\r\nimport './CommentsLayout.css'\r\nconst CommentsLayout = () => {\r\n  return (\r\n    <div className=\"comments-row\">\r\n      <div>\r\n        <SkeletonElement className=\"comment-author\" type=\"title\" />\r\n        &nbsp;\r\n        <SkeletonElement type=\"spantext\" />\r\n        <SkeletonElement type=\"text\" />\r\n      </div>\r\n      <div className=\"comment-upvote\">\r\n        <SkeletonElement type=\"spantext\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsLayout;\r\n","import React, { useEffect } from \"react\";\r\nimport Comments from \"../../Components/Comments/Comments\";\r\nimport SinglePost from \"../../Components/SinglePost/SinglePost\";\r\nimport \"./CommentsPage.css\";\r\nimport { getComments } from \"../../ReduxStore/Reducers/CommentSlice\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CommentsLayout from \"../../Components/SkeletonFolder/CommentsLayout/CommentsLayout\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nconst CommentsPage = () => {\r\n  const pathname = useParams();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isError, error, commentData } = useSelector((state) => {\r\n    return state.comments;\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getComments(pathname));\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  if (isError) {\r\n    return <ErrorCard error={error.message} />;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout sideBarProps={{ filter: false }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <CardLayout />\r\n          {[1, 2, 3, 4, 5, 6].map((index) => (\r\n            <CommentsLayout key={index} />\r\n          ))}\r\n        </div>\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n  return (\r\n    <ComponentLayout sideBarProps={{ filter: false }}>\r\n      {commentData && (\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\r\n        >\r\n          <SinglePost postData={commentData[0].data.children} />\r\n          <Comments comments={commentData[1].data.children} />\r\n        </div>\r\n      )}\r\n    </ComponentLayout>\r\n  );\r\n};\r\n\r\nexport default CommentsPage;\r\n"],"sourceRoot":""}