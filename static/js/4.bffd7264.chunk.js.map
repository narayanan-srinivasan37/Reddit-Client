{"version":3,"sources":["Pages/HomePage/HomePage.js"],"names":["Post","lazy","HomePage","dispatch","useDispatch","pathname","useParams","useSelector","state","posts","isLoading","isError","postsData","error","useEffect","getAllPosts","filtertype","message","sideBarProps","filter","map","index","Suspense","fallback","postData"],"mappings":"wHAAA,kFASMA,EAAOC,gBAAK,kBAAM,2CAgCTC,UA/BE,WACf,IAAMC,EAAWC,cACXC,EAAWC,cACjB,EAAiDC,aAC/C,SAACC,GAAD,OAAWA,EAAMC,SADXC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,MAQvC,OALAC,qBAAU,WAER,OADAX,EAASY,YAAYV,EAASW,aACvB,eACN,CAACX,EAASW,aAETL,EACK,cAAC,IAAD,CAAWE,MAAOA,EAAMI,UAE7BP,EAEA,cAAC,IAAD,CAAiBQ,aAAc,CAAEC,QAAQ,GAAzC,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIC,KAAI,SAACC,GAAD,OACnC,cAAC,IAAD,GAAiBA,QAMvB,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B,SACA,cAAC,IAAD,CAAiBL,aAAc,CAAEC,QAAQ,GAAzC,SACGP,GAAa,cAACZ,EAAD,CAAMwB,SAAUZ","file":"static/js/4.bffd7264.chunk.js","sourcesContent":["import React, { useEffect, lazy } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport ComponentLayout from \"../../Components/ComponentLayout/ComponentLayout\";\r\nimport { getAllPosts } from \"../../ReduxStore/Reducers/PostsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CardLayout from \"../../Components/SkeletonFolder/Card/CardLayout\";\r\nimport ErrorCard from \"../../Components/Card/ErrorCard/ErrorCard\";\r\n\r\nconst Post = lazy(() => import(\"../../Components/Post/Post\"));\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const pathname = useParams();\r\n  const { isLoading, isError, postsData, error } = useSelector(\r\n    (state) => state.posts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getAllPosts(pathname.filtertype));\r\n    return () => {};\r\n  }, [pathname.filtertype]);\r\n\r\n  if (isError) {\r\n    return <ErrorCard error={error.message} />;\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <ComponentLayout sideBarProps={{ filter: true }}>\r\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((index) => (\r\n          <CardLayout key={index} />\r\n        ))}\r\n      </ComponentLayout>\r\n    );\r\n  }\r\n  return (\r\n    <React.Suspense fallback={<CardLayout/>}>\r\n    <ComponentLayout sideBarProps={{ filter: true }}>\r\n      {postsData && <Post postData={postsData} />}\r\n    </ComponentLayout>\r\n    </React.Suspense>\r\n  );\r\n};\r\nexport default HomePage;\r\n"],"sourceRoot":""}